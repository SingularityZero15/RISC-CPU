# 
# Synthesis run script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_param synth.incrementalSynthesisCache C:/Users/gjk19/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-25560-DESKTOP-JB05U9D/incrSyn
set_msg_config -id {Synth 8-256} -limit 10000
set_msg_config -id {Synth 8-638} -limit 10000
create_project -in_memory -part xc7vh580thcg1155-2

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir {C:/Users/gjk19/Desktop/Digital Circuit/Vivado Project/RISC CPU/RISC CPU.cache/wt} [current_project]
set_property parent.project_path {C:/Users/gjk19/Desktop/Digital Circuit/Vivado Project/RISC CPU/RISC CPU.xpr} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo {c:/Users/gjk19/Desktop/Digital Circuit/Vivado Project/RISC CPU/RISC CPU.cache/ip} [current_project]
set_property ip_cache_permissions {read write} [current_project]
add_files {{C:/Users/gjk19/Desktop/Digital Circuit/Vivado Project/RISC CPU/RISC CPU.srcs/sources_1/ip/rom_256x16b/Rom_Data.coe}}
read_verilog -library xil_defaultlib {{C:/Users/gjk19/Desktop/Digital Circuit/Vivado Project/RISC CPU/RISC CPU.srcs/sources_1/new/Program_Counter.v}}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}

synth_design -top Program_Counter -part xc7vh580thcg1155-2


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef Program_Counter.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file Program_Counter_utilization_synth.rpt -pb Program_Counter_utilization_synth.pb"
set src_rc [catch { 
  puts "source D:/Xilinx/Vivado/Alarm.tcl"
  source D:/Xilinx/Vivado/Alarm.tcl
} _RESULT] 
if {$src_rc} { 
  send_msg_id runtcl-1 error "$_RESULT"
  send_msg_id runtcl-2 error "sourcing script D:/Xilinx/Vivado/Alarm.tcl failed"
  return -code error
}
